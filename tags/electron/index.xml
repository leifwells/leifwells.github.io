<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Leif&#39;s Development Blog-o-rama </title>
    <link>https://leifwells.github.io/tags/electron/</link>
    <language>en-us</language>
    <author></author>
    <rights>(C) 2016</rights>
    <updated>2016-06-12 11:41:41 -0400 EDT</updated>

    
      
        <item>
          <title>Getting Angular CLI Apps to Work Inside Electron</title>
          <link>https://leifwells.github.io/2016/06/12/getting-angular-cli-apps-to-work-inside-electron/</link>
          <pubDate>Sun, 12 Jun 2016 11:41:41 EDT</pubDate>
          <author></author>
          <guid>https://leifwells.github.io/2016/06/12/getting-angular-cli-apps-to-work-inside-electron/</guid>
          <description>

&lt;p&gt;I started working on a new Electron application using the Angular CLI and found a solution to a show-stopping problem that I thought that I should share.&lt;/p&gt;

&lt;h2 id=&#34;what-is-electron:4950222bc026b818c0c34173e4c317c8&#34;&gt;What is Electron?&lt;/h2&gt;

&lt;p&gt;For those who haven&amp;rsquo;t heard of it, &lt;a href=&#34;http://electron.atom.io/&#34;&gt;Electron&lt;/a&gt; is a technology that combines &lt;a href=&#34;https://nodejs.org/&#34;&gt;Node&lt;/a&gt; and &lt;a href=&#34;https://www.chromium.org/Home&#34;&gt;Chromium&lt;/a&gt; and allows Web developers to build desktop applications using their skills with HTML/CSS/JavaScript. Electron was built by &lt;a href=&#34;https://github.com/&#34;&gt;Github&lt;/a&gt; as a shell for their &lt;a href=&#34;https://atom.io/&#34;&gt;Atom&lt;/a&gt; coding tool. &lt;a href=&#34;https://slack.com/&#34;&gt;Slack&lt;/a&gt; and Microsoft&amp;rsquo;s &lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;Visual Studio Code&lt;/a&gt; are built using Electron. Take a look at some of the applications out there that were &lt;a href=&#34;http://electron.atom.io/apps/&#34;&gt;built using Electron&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;what-is-the-angular-cli:4950222bc026b818c0c34173e4c317c8&#34;&gt;What is the Angular CLI?&lt;/h2&gt;

&lt;p&gt;I decided that I would build my new desktop application with Angular 2 which is currently in the release candidate stage. I also decided I was going to use the new &lt;a href=&#34;https://cli.angular.io/&#34;&gt;Angular CLI&lt;/a&gt; &amp;mdash; currently in beta &amp;mdash; to assemble this application. The Angular CLI allows developers to assemble an Angular 2 application quickly and easily. If you are interested in using Angular 2 you should really take a look at Angular CLI.&lt;/p&gt;

&lt;h2 id=&#34;the-problem:4950222bc026b818c0c34173e4c317c8&#34;&gt;The Problem&lt;/h2&gt;

&lt;p&gt;After using the Angular CLI to create an Angular project, testing that project as a Web project (outside of Electron) making sure it works, I fired up the Electron app and loaded the project. I was immediately presented with the following errors in the console:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;GET file:///ember-cli-live-reload.js net::ERR_FILE_NOT_FOUND&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;GET file:///vendor/es6-shim/es6-shim.js net::ERR_FILE_NOT_FOUND&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;GET file:///vendor/reflect-metadata/Reflect.js net::ERR_FILE_NOT_FOUND&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;GET file:///vendor/systemjs/dist/system.src.js net::ERR_FILE_NOT_FOUND&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;GET file:///vendor/zone.js/dist/zone.js net::ERR_FILE_NOT_FOUND&lt;/code&gt;&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;the-solution:4950222bc026b818c0c34173e4c317c8&#34;&gt;The Solution&lt;/h2&gt;

&lt;p&gt;To me, these errors made no sense. It probably won&amp;rsquo;t make sense to anyone else. It took a few tries and Google search key words for me to find &lt;a href=&#34;http://stackoverflow.com/a/37663447/5937538&#34;&gt;this problem and solution on Stack Overflow&lt;/a&gt; so I thought I&amp;rsquo;d mention it here to hopefully give it some more weight with Google. Special thanks to the mysterious Alex P for taking the time to publish this solution.&lt;/p&gt;

&lt;p&gt;The solution is fairly simple. In your Angular application&amp;rsquo;s &lt;code&gt;index.html&lt;/code&gt; that was generated by the Angular CLI find this line found inside your head tag:&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;code&gt;&amp;lt;base href=&amp;quot;/&amp;quot;&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Change this line to:&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;code&gt;&amp;lt;base href=&amp;quot;./&amp;quot;&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;After making this suggested change my errors went away and my Angular application worked perfectly. From this point I was able to run the &lt;code&gt;ng build --watch&lt;/code&gt; command in terminal to watch for changes in my Angular application&amp;rsquo;s code and simply refresh the Electron application to see the changes.&lt;/p&gt;

&lt;p&gt;It is my hope that this tip saves people some grief. Good luck.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://twitter.com/leifwells&#34; class=&#34;twitter-follow-button&#34; data-show-count=&#34;false&#34; data-size=&#34;large&#34;&gt;Follow @leifwells&lt;/a&gt;
&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?&amp;lsquo;http&amp;rsquo;:&amp;lsquo;https&amp;rsquo;;if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+&amp;rsquo;://platform.twitter.com/widgets.js&amp;rsquo;;fjs.parentNode.insertBefore(js,fjs);}}(document, &amp;lsquo;script&amp;rsquo;, &amp;lsquo;twitter-wjs&amp;rsquo;);&lt;/script&gt;&lt;/p&gt;
</description>
        </item>
      
    

  </channel>
</rss>
